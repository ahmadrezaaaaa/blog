name: Django CI

on:
  push:
    branches: [ test ]
  pull_request:
    branches: [ test ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          load: true
          tags: your-username/your-repo:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache-new
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: created .env file
        run: |
          touch .env
          echo PG_NAME=${{ secrets.PG_NAME }}  >> .env
          echo PG_PASSWORD=${{ secrets.PG_PASSWORD }} >> .env
          echo PG_USERNAME=${{ secrets.PG_USERNAME }} >> .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo CELERY_BROKER_URL=${{ secrets.CELERY_BROKER_URL }} >> .env
          echo CELERY_RESULT_BACKEND=${{ secrets.CELERY_RESULT_BACKEND }} >> .env
          cat .env


      - name: start services
        run: docker-compose up -d

      - name: Code Formatting with Black
        run: docker-compose run blog_app black .

      - name: Security Scanning with Bandit
        run: docker-compose run blog_app bandit -r .

      - name: Run tests
        run: docker-compose run blog_app python manage.py test

      - name: Shut down
        run: docker-compose down